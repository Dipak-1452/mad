<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    tools:context=".MainActivity">
    <EditText
        android:id="@+id/nameEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Name" />
    <EditText
        android:id="@+id/emailEditText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter Email"
        android:layout_below="@id/nameEditText"
        android:layout_marginTop="16dp" />
    <Button
        android:id="@+id/saveButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Save"
        android:layout_below="@id/emailEditText"
        android:layout_marginTop="16dp"
        />
    <ListView
        android:id="@+id/userListView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/saveButton"
        android:layout_marginTop="16dp" />
</RelativeLayout>














package com.example.third;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private EditText nameEditText, emailEditText;
    private Button saveButton;
    private ListView userListView;
    private DatabaseHelper databaseHelper;
    private SimpleCursorAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize UI components
        nameEditText = findViewById(R.id.nameEditText);
        emailEditText = findViewById(R.id.emailEditText);
        saveButton = findViewById(R.id.saveButton);
        userListView = findViewById(R.id.userListView);

        // Initialize the database helper
        databaseHelper = new DatabaseHelper(this);

        // Load and display existing users
        loadUserData();

        // Handle Save Button Click
        saveButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String name = nameEditText.getText().toString().trim();
                String email = emailEditText.getText().toString().trim();
                if (!name.isEmpty() && !email.isEmpty()) {
                    long result = databaseHelper.addUser(name, email);
                    if (result != -1) {
                        Toast.makeText(MainActivity.this, "User Added!", Toast.LENGTH_SHORT).show();
                        nameEditText.setText("");
                        emailEditText.setText("");
                        loadUserData(); // Refresh ListView
                    } else {
                        Toast.makeText(MainActivity.this, "Error occurred or user already exists.",
                                Toast.LENGTH_SHORT).show();
                    }
                } else {
                    Toast.makeText(MainActivity.this, "Please fill in both fields.",
                            Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    // Method to load and display users in the ListView
    private void loadUserData() {
        Cursor cursor = databaseHelper.getAllUsers();
        if (cursor != null) {
            String[] from = {DatabaseHelper.COLUMN_NAME, DatabaseHelper.COLUMN_EMAIL};
            int[] to = {android.R.id.text1, android.R.id.text2};
            adapter = new SimpleCursorAdapter(this, android.R.layout.simple_list_item_2, cursor,
                    from, to, 0);
            userListView.setAdapter(adapter);
        }
    }


    // DatabaseHelper class to handle SQLite database operations
    public static class DatabaseHelper extends SQLiteOpenHelper {

        private static final String DATABASE_NAME = "users.db";
        private static final int DATABASE_VERSION = 1;
        public static final String TABLE_NAME = "users";
        public static final String COLUMN_ID = "_id";
        public static final String COLUMN_NAME = "name";
        public static final String COLUMN_EMAIL = "email";

        public DatabaseHelper(Context context) {
            super(context, DATABASE_NAME, null, DATABASE_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            String createTable = "CREATE TABLE " + TABLE_NAME + " (" +
                    COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                    COLUMN_NAME + " TEXT, " +
                    COLUMN_EMAIL + " TEXT)";
            db.execSQL(createTable);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
            onCreate(db);
        }

        // Add user
        public long addUser(String name, String email) {
            SQLiteDatabase db = this.getWritableDatabase();
            ContentValues values = new ContentValues();
            values.put(COLUMN_NAME, name);
            values.put(COLUMN_EMAIL, email);
            return db.insert(TABLE_NAME, null, values);
        }

        // Get all users
        public Cursor getAllUsers() {
            SQLiteDatabase db = this.getReadableDatabase();
            return db.query(TABLE_NAME, null, null, null, null, null, null);
        }
    }
}
